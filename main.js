(()=>{"use strict";var r={134:(r,n,e)=>{e.d(n,{Z:()=>u});var t=e(537),o=e.n(t),i=e(645),a=e.n(i),s=e(667),A=e.n(s),l=new URL(e(731),e.b),c=a()(o());c.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Passions+Conflict&family=Rowdies:wght@300&display=swap);"]);var d=A()(l);c.push([r.id,':root {\r\n  --cursive: "Passions Conflict", cursive;\r\n  --blocky: "Rowdies", cursive;\r\n  font-family: var(--cursive), -apple-system, BlinkMacSystemFont, "Segoe UI",\r\n    Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n  font-size: 16px;\r\n  color: lightgrey;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n\r\n#background {\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  gap: 0px;\r\n  padding-top: 10%;\r\n  background-image: url('+d+');\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n}\r\n\r\n#title {\r\n  position: absolute;\r\n  width: 50%;\r\n  height: 10%;\r\n  left: 50%;\r\n  top: 0px;\r\n  margin: 0px;\r\n  margin-left: -25%;\r\n  font-size: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5px;\r\n}\r\n\r\n#messageContainer {\r\n  --width: max(30%, 250px);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  position: fixed;\r\n  width: var(--width);\r\n  height: 30vh;\r\n  flex-direction: column;\r\n  padding: 2.5% 5%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  left: 50%;\r\n  top: 50%;\r\n  margin-left: calc(-1 * 0.5 * var(--width));\r\n  margin-top: -15vh;\r\n  background-color: white;\r\n  z-index: 1;\r\n  box-shadow: 0px 0px 15px black;\r\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,\r\n    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n}\r\n\r\n#message {\r\n  font-weight: 600;\r\n  color: lime;\r\n  margin: 0px;\r\n}\r\n\r\n#outcomes {\r\n  height: 30%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n}\r\n\r\n#outcomes > * {\r\n  display: block;\r\n  height: 100%;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #7393b3;\r\n}\r\n\r\n#outcomes > div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n#outcomes > div > div {\r\n  height: 25px;\r\n  width: 25px;\r\n  border-radius: 5px;\r\n  /* background-color: transparent; */\r\n}\r\n\r\n.miss {\r\n  background-color: aqua;\r\n}\r\n\r\n.hit {\r\n  background-color: red;\r\n}\r\n\r\n#buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  gap: 5%;\r\n}\r\n\r\n#buttons > button {\r\n  border: solid 1px #7393b3;\r\n  color: #7393b3;\r\n  background-color: white;\r\n  border-radius: 2px;\r\n}\r\n\r\n#buttons > button:hover {\r\n  color: white;\r\n  background-color: #7393b3;\r\n}\r\n\r\n#title * {\r\n  height: 100%;\r\n  margin: 0px;\r\n}\r\n\r\n#title p {\r\n  line-height: 10vh;\r\n}\r\n\r\n#title a {\r\n  background-image: url("https://img.icons8.com/3d-fluency/94/null/github.png");\r\n  width: 35px;\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n#title a:hover {\r\n  animation: myAnim 1s ease 0s 1 normal forwards;\r\n}\r\n\r\n@keyframes myAnim {\r\n  0%,\r\n  100% {\r\n    transform: translateX(0%);\r\n    transform-origin: 50% 50%;\r\n  }\r\n\r\n  15% {\r\n    transform: translateX(-10px) rotate(-6deg);\r\n  }\r\n\r\n  30% {\r\n    transform: translateX(5px) rotate(6deg);\r\n  }\r\n\r\n  45% {\r\n    transform: translateX(-5px) rotate(-3.6deg);\r\n  }\r\n\r\n  60% {\r\n    transform: translateX(3px) rotate(2.4deg);\r\n  }\r\n\r\n  75% {\r\n    transform: translateX(-2px) rotate(-1.2deg);\r\n  }\r\n}\r\n\r\n.section {\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.section > p {\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n  margin: 0px;\r\n  align-self: flex-start;\r\n  margin-left: 20%;\r\n}\r\n\r\n.board {\r\n  box-sizing: border-box;\r\n  width: 30vw;\r\n  height: 30vw;\r\n  border: solid 1px black;\r\n  padding: 0px;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: repeat(10, 1fr);\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.row {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-template-rows: 1fr;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.column {\r\n  width: 100%;\r\n  height: 100%;\r\n  border: solid 1px gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.column > div {\r\n  height: 70%;\r\n  width: 70%;\r\n  background-color: #e9dcc9;\r\n  /* border-radius: 50%; */\r\n}\r\n\r\n.column:hover {\r\n  background-color: lime;\r\n}\r\n\r\n@media all and (max-width: 950px) {\r\n  #background {\r\n    flex-direction: column-reverse;\r\n  }\r\n\r\n  .section {\r\n    width: 100%;\r\n    height: 50%;\r\n  }\r\n\r\n  .board {\r\n    width: 30vh;\r\n    height: 30vh;\r\n  }\r\n}\r\n',"",{version:3,sources:["webpack://./src/Styles/index.css"],names:[],mappings:"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",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Passions+Conflict&family=Rowdies:wght@300&display=swap");\r\n\r\n:root {\r\n  --cursive: "Passions Conflict", cursive;\r\n  --blocky: "Rowdies", cursive;\r\n  font-family: var(--cursive), -apple-system, BlinkMacSystemFont, "Segoe UI",\r\n    Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n  font-size: 16px;\r\n  color: lightgrey;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n\r\n#background {\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  gap: 0px;\r\n  padding-top: 10%;\r\n  background-image: url("./Images/background-l.jpg");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n}\r\n\r\n#title {\r\n  position: absolute;\r\n  width: 50%;\r\n  height: 10%;\r\n  left: 50%;\r\n  top: 0px;\r\n  margin: 0px;\r\n  margin-left: -25%;\r\n  font-size: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5px;\r\n}\r\n\r\n#messageContainer {\r\n  --width: max(30%, 250px);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  position: fixed;\r\n  width: var(--width);\r\n  height: 30vh;\r\n  flex-direction: column;\r\n  padding: 2.5% 5%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  left: 50%;\r\n  top: 50%;\r\n  margin-left: calc(-1 * 0.5 * var(--width));\r\n  margin-top: -15vh;\r\n  background-color: white;\r\n  z-index: 1;\r\n  box-shadow: 0px 0px 15px black;\r\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,\r\n    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n}\r\n\r\n#message {\r\n  font-weight: 600;\r\n  color: lime;\r\n  margin: 0px;\r\n}\r\n\r\n#outcomes {\r\n  height: 30%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n}\r\n\r\n#outcomes > * {\r\n  display: block;\r\n  height: 100%;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #7393b3;\r\n}\r\n\r\n#outcomes > div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n#outcomes > div > div {\r\n  height: 25px;\r\n  width: 25px;\r\n  border-radius: 5px;\r\n  /* background-color: transparent; */\r\n}\r\n\r\n.miss {\r\n  background-color: aqua;\r\n}\r\n\r\n.hit {\r\n  background-color: red;\r\n}\r\n\r\n#buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  gap: 5%;\r\n}\r\n\r\n#buttons > button {\r\n  border: solid 1px #7393b3;\r\n  color: #7393b3;\r\n  background-color: white;\r\n  border-radius: 2px;\r\n}\r\n\r\n#buttons > button:hover {\r\n  color: white;\r\n  background-color: #7393b3;\r\n}\r\n\r\n#title * {\r\n  height: 100%;\r\n  margin: 0px;\r\n}\r\n\r\n#title p {\r\n  line-height: 10vh;\r\n}\r\n\r\n#title a {\r\n  background-image: url("https://img.icons8.com/3d-fluency/94/null/github.png");\r\n  width: 35px;\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n#title a:hover {\r\n  animation: myAnim 1s ease 0s 1 normal forwards;\r\n}\r\n\r\n@keyframes myAnim {\r\n  0%,\r\n  100% {\r\n    transform: translateX(0%);\r\n    transform-origin: 50% 50%;\r\n  }\r\n\r\n  15% {\r\n    transform: translateX(-10px) rotate(-6deg);\r\n  }\r\n\r\n  30% {\r\n    transform: translateX(5px) rotate(6deg);\r\n  }\r\n\r\n  45% {\r\n    transform: translateX(-5px) rotate(-3.6deg);\r\n  }\r\n\r\n  60% {\r\n    transform: translateX(3px) rotate(2.4deg);\r\n  }\r\n\r\n  75% {\r\n    transform: translateX(-2px) rotate(-1.2deg);\r\n  }\r\n}\r\n\r\n.section {\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.section > p {\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n  margin: 0px;\r\n  align-self: flex-start;\r\n  margin-left: 20%;\r\n}\r\n\r\n.board {\r\n  box-sizing: border-box;\r\n  width: 30vw;\r\n  height: 30vw;\r\n  border: solid 1px black;\r\n  padding: 0px;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: repeat(10, 1fr);\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.row {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-template-rows: 1fr;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.column {\r\n  width: 100%;\r\n  height: 100%;\r\n  border: solid 1px gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.column > div {\r\n  height: 70%;\r\n  width: 70%;\r\n  background-color: #e9dcc9;\r\n  /* border-radius: 50%; */\r\n}\r\n\r\n.column:hover {\r\n  background-color: lime;\r\n}\r\n\r\n@media all and (max-width: 950px) {\r\n  #background {\r\n    flex-direction: column-reverse;\r\n  }\r\n\r\n  .section {\r\n    width: 100%;\r\n    height: 50%;\r\n  }\r\n\r\n  .board {\r\n    width: 30vh;\r\n    height: 30vh;\r\n  }\r\n}\r\n'],sourceRoot:""}]);const u=c},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,i){"string"==typeof r&&(r=[[null,r,void 0]]);var a={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<r.length;l++){var c=[].concat(r[l]);t&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},a=[],s=0;s<r.length;s++){var A=r[s],l=t.base?A[0]+t.base:A[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var u=e(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var h=o(p,t);t.byIndex=s,n.splice(s,0,{identifier:d,updater:h,references:1})}a.push(d)}return a}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var i=t(r=r||[],o=o||{});return function(r){r=r||[];for(var a=0;a<i.length;a++){var s=e(i[a]);n[s].references--}for(var A=t(r,o),l=0;l<i.length;l++){var c=e(i[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=A}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},731:(r,n,e)=>{r.exports=e.p+"8a4951b83a4c0d13cbc5.jpg"}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var r=e(379),n=e.n(r),t=e(795),o=e.n(t),i=e(569),a=e.n(i),s=e(565),A=e.n(s),l=e(216),c=e.n(l),d=e(589),u=e.n(d),p=e(134),h={};h.styleTagTransform=u(),h.setAttributes=A(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=c(),n()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;class g{constructor(){this.length=null,this.damageCount=0,this.isSunk=()=>this.damageCount>=this.length,this.hit=()=>{++this.damageCount}}}class m extends g{constructor(){super(),this.length=3}}class E extends g{constructor(){super(),this.length=5}}class C extends g{constructor(){super(),this.length=4}}class f extends g{constructor(){super(),this.length=2}}class B{constructor(){this.gameBoard=new class{constructor(){this.board=this.#r(),this.shotsReceived=[],this.clear=()=>{this.board=this.#r(),this.shotsReceived=[]}}place(r,n,e,t=!0){const o=e.length;try{this.#n(r,n,o,t);let i=0;if(1==t)for(;i<o;)this.board[r][n+i]=e,i++;else for(;i<o;)this.board[r+i][n]=e,i++}catch(r){throw new Error(r)}}receiveAttack(r,n){try{const e=this.board;return this.#e(r,n),null!=e[r][n]?(e[r][n].hit(),this.#t(r,n),"Hit"):(this.#o(r,n),"Miss")}catch(r){throw new Error(r)}}allShipsSunk(){const r=this.board;for(let n=0;n<r.length;n++)for(let e=0;e<r[n].length;e++)if(void 0!==r[n][e]&&0==r[n][e].isSunk())return!1;return!0}#r(){const r=new Array(10);for(let n=0;n<10;n++)r[n]=new Array(10);return r}#n(r,n,e,t){const o=this.board;!function(){if(r>9||n>9)throw new Error("location does not exist");if(1==t&&n+e>9)throw new Error("Ship will overflow the grid");if(0==t&&r+e>9)throw new Error("Ship will overflow the grid")}(),function(){if(1==t)for(let t=0;t<e;t++)if(null!=o[r][n+t])throw new Error("Space is occupied by another ship");if(0==t)for(let t=0;t<e;t++)if(null!=o[r+t][n])throw new Error("Space is occupied by another ship")}()}#e(r,n){const e=this.shotsReceived;for(let t=0;t<e.length;t++)if(e[t].x==r&&e[t].y==n)throw new Error("Location Shot before")}#t(r,n){const e=this.shotsReceived;e[e.length]={x:r,y:n,isHit:!0}}#o(r,n){const e=this.shotsReceived;e[e.length]={x:r,y:n,isHit:!1}}},this.ships={Destroyer:new m,Carrier:new E,PatrolBoat:new f,Battleship:new C}}fire(r,n,e){e.receiveAttack(r,n)}randomNumber(r){return Math.floor(Math.random()*r)}placeRandomly(r=0){const n=Object.values(this.ships);if(!(r>=n.length))try{const e=[!0,!1];let t=this.randomNumber(10),o=this.randomNumber(10),i=this.randomNumber(2);return n[r].damageCount=0,this.gameBoard.place(t,o,n[r],e[i]),this.placeRandomly(r+1)}catch(n){return this.placeRandomly(r)}}}function b(r,n){for(let e=0;e<r.length;e++)for(let t=0;t<r[e].length;t++)null!=r[e][t]&&n[e][t].appendChild(document.createElement("div"))}function y(r){let n=[];for(let e=0;e<10;e++){n[e]=[];for(let t=0;t<10;t++)n[e][t]=r.getElementsByClassName(`row ${e}`)[0].getElementsByClassName(`column ${t}`)[0]}return n}function x(r,n,e){let t=r[0],o=r[1];void 0!==n[t][o]?e[t][o].style.backgroundColor="red":e[t][o].style.backgroundColor="#00FFFF"}function v(r){for(let n=0;n<r.length;n++)for(let e=0;e<r[n].length;e++){let t=r[n][e];t.innerHTML="",t.style.backgroundColor="transparent"}}const w=document.getElementById("message"),k=document.getElementById("messageContainer"),S=document.getElementById("messageButton"),W=document.getElementById("autoPlace"),I=document.getElementById("outcomes"),R=new B,X=R.gameBoard,j=y(document.getElementById("playerBoard")),Y=(R.ships.Destroyer,R.ships.Carrier,R.ships.PatrolBoat,R.ships.Battleship,new class extends B{constructor(){super()}fire(r){let n=this.randomNumber(10),e=this.randomNumber(10);try{return r.receiveAttack(n,e),[n,e]}catch(n){return this.fire(r)}}}),z=Y.gameBoard,U=y(document.getElementById("computerBoard"));Y.ships.Destroyer,Y.ships.Carrier,Y.ships.PatrolBoat,Y.ships.Battleship,R.placeRandomly(),Y.placeRandomly(),S.addEventListener("click",(()=>{k.style.display="none",I.style.display="none"})),W.addEventListener("click",(()=>{R.gameBoard.clear(),Y.gameBoard.clear(),v(j),v(U),R.placeRandomly(),Y.placeRandomly(),b(X.board,j)})),U.forEach(((r,n)=>{let e=n;r.forEach(((r,n)=>{let t=n;r.addEventListener("click",(()=>{R.fire(e,t,z),x([e,t],z.board,U),null!=z.board[e][t]&&U[e][t].appendChild(document.createElement("div")),1==z.allShipsSunk()&&(k.style.display="flex",w.textContent="Player wins"),x(Y.fire(X),X.board,j),1==X.allShipsSunk()&&(k.style.display="flex",w.textContent="Computer wins")}))}))})),b(X.board,j)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,