(()=>{"use strict";var r={134:(r,n,e)=>{e.d(n,{Z:()=>p});var t=e(537),o=e.n(t),i=e(645),a=e.n(i),s=e(667),c=e.n(s),l=new URL(e(731),e.b),A=a()(o());A.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Passions+Conflict&family=Rowdies:wght@300&display=swap);"]);var d=c()(l);A.push([r.id,':root {\r\n  --cursive: "Passions Conflict", cursive;\r\n  --blocky: "Rowdies", cursive;\r\n  font-family: var(--cursive), -apple-system, BlinkMacSystemFont, "Segoe UI",\r\n    Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n  font-size: 16px;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n\r\n#background {\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  gap: 0px;\r\n  padding-top: 10%;\r\n  background-image: url('+d+');\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n}\r\n\r\n#title {\r\n  position: absolute;\r\n  width: 50%;\r\n  height: 10%;\r\n  left: 50%;\r\n  top: 0px;\r\n  margin: 0px;\r\n  margin-left: -25%;\r\n  font-size: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5px;\r\n}\r\n\r\n#title * {\r\n  height: 100%;\r\n  margin: 0px;\r\n}\r\n\r\n#title p {\r\n  line-height: 10vh;\r\n}\r\n\r\n#title div {\r\n  background-image: url("https://img.icons8.com/external-icongeek26-glyph-icongeek26/64/null/external-sword-martial-arts-icongeek26-glyph-icongeek26-1.png");\r\n  width: 35px;\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.section {\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.section > p {\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n  margin: 0px;\r\n  align-self: flex-start;\r\n  margin-left: 20%;\r\n  color: black;\r\n}\r\n\r\n.board {\r\n  box-sizing: border-box;\r\n  width: 30vw;\r\n  height: 30vw;\r\n  border: solid 1px black;\r\n  padding: 0px;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: repeat(10, 1fr);\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.row {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-template-rows: 1fr;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.column {\r\n  width: 100%;\r\n  height: 100%;\r\n  border: solid 1px gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.column > div {\r\n  height: 50%;\r\n  width: 50%;\r\n  background-color: #e9dcc9;\r\n  border-radius: 50%;\r\n}\r\n\r\n.column:hover {\r\n  background-color: lime;\r\n}\r\n\r\n@media all and (max-width: 950px) {\r\n  #background {\r\n    flex-direction: column-reverse;\r\n  }\r\n\r\n  .section {\r\n    width: 100%;\r\n    height: 50%;\r\n  }\r\n\r\n  .board {\r\n    width: 30vh;\r\n    height: 30vh;\r\n  }\r\n}\r\n',"",{version:3,sources:["webpack://./src/Styles/index.css"],names:[],mappings:"AAEA;EACE,uCAAuC;EACvC,4BAA4B;EAC5B;gFAC8E;EAC9E,eAAe;AACjB;;AAEA;;EAEE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,YAAY;EACZ,aAAa;EACb,aAAa;EACb,QAAQ;EACR,gBAAgB;EAChB,yDAAkD;EAClD,4BAA4B;EAC5B,2BAA2B;EAC3B,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,SAAS;EACT,QAAQ;EACR,WAAW;EACX,iBAAiB;EACjB,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,0JAA0J;EAC1J,WAAW;EACX,wBAAwB;EACxB,2BAA2B;EAC3B,4BAA4B;AAC9B;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,WAAW;EACX,sBAAsB;EACtB,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,0BAA0B;EAC1B,mCAAmC;EACnC,0BAA0B;AAC5B;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,uBAAuB;EACvB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,UAAU;EACV,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE;IACE,8BAA8B;EAChC;;EAEA;IACE,WAAW;IACX,WAAW;EACb;;EAEA;IACE,WAAW;IACX,YAAY;EACd;AACF",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Passions+Conflict&family=Rowdies:wght@300&display=swap");\r\n\r\n:root {\r\n  --cursive: "Passions Conflict", cursive;\r\n  --blocky: "Rowdies", cursive;\r\n  font-family: var(--cursive), -apple-system, BlinkMacSystemFont, "Segoe UI",\r\n    Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n  font-size: 16px;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n\r\n#background {\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  gap: 0px;\r\n  padding-top: 10%;\r\n  background-image: url("./Images/background-l.jpg");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n}\r\n\r\n#title {\r\n  position: absolute;\r\n  width: 50%;\r\n  height: 10%;\r\n  left: 50%;\r\n  top: 0px;\r\n  margin: 0px;\r\n  margin-left: -25%;\r\n  font-size: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5px;\r\n}\r\n\r\n#title * {\r\n  height: 100%;\r\n  margin: 0px;\r\n}\r\n\r\n#title p {\r\n  line-height: 10vh;\r\n}\r\n\r\n#title div {\r\n  background-image: url("https://img.icons8.com/external-icongeek26-glyph-icongeek26/64/null/external-sword-martial-arts-icongeek26-glyph-icongeek26-1.png");\r\n  width: 35px;\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.section {\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.section > p {\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n  margin: 0px;\r\n  align-self: flex-start;\r\n  margin-left: 20%;\r\n  color: black;\r\n}\r\n\r\n.board {\r\n  box-sizing: border-box;\r\n  width: 30vw;\r\n  height: 30vw;\r\n  border: solid 1px black;\r\n  padding: 0px;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: repeat(10, 1fr);\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.row {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-template-rows: 1fr;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.column {\r\n  width: 100%;\r\n  height: 100%;\r\n  border: solid 1px gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.column > div {\r\n  height: 50%;\r\n  width: 50%;\r\n  background-color: #e9dcc9;\r\n  border-radius: 50%;\r\n}\r\n\r\n.column:hover {\r\n  background-color: lime;\r\n}\r\n\r\n@media all and (max-width: 950px) {\r\n  #background {\r\n    flex-direction: column-reverse;\r\n  }\r\n\r\n  .section {\r\n    width: 100%;\r\n    height: 50%;\r\n  }\r\n\r\n  .board {\r\n    width: 30vh;\r\n    height: 30vh;\r\n  }\r\n}\r\n'],sourceRoot:""}]);const p=A},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,i){"string"==typeof r&&(r=[[null,r,void 0]]);var a={};if(t)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<r.length;l++){var A=[].concat(r[l]);t&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),n.push(A))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},a=[],s=0;s<r.length;s++){var c=r[s],l=t.base?c[0]+t.base:c[0],A=i[l]||0,d="".concat(l," ").concat(A);i[l]=A+1;var p=e(d),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(h);else{var u=o(h,t);t.byIndex=s,n.splice(s,0,{identifier:d,updater:u,references:1})}a.push(d)}return a}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var i=t(r=r||[],o=o||{});return function(r){r=r||[];for(var a=0;a<i.length;a++){var s=e(i[a]);n[s].references--}for(var c=t(r,o),l=0;l<i.length;l++){var A=e(i[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=c}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},731:(r,n,e)=>{r.exports=e.p+"8a4951b83a4c0d13cbc5.jpg"}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var r=e(379),n=e.n(r),t=e(795),o=e.n(t),i=e(569),a=e.n(i),s=e(565),c=e.n(s),l=e(216),A=e.n(l),d=e(589),p=e.n(d),h=e(134),u={};u.styleTagTransform=p(),u.setAttributes=c(),u.insert=a().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=A(),n()(h.Z,u),h.Z&&h.Z.locals&&h.Z.locals;class g{constructor(){this.length=null,this.damageCount=0,this.isSunk=()=>this.damageCount>=this.length,this.hit=()=>{++this.damageCount}}}class f extends g{constructor(){super(),this.length=3}}class m extends g{constructor(){super(),this.length=5}}class E extends g{constructor(){super(),this.length=4}}class C extends g{constructor(){super(),this.length=2}}class b{constructor(){this.gameBoard=new class{constructor(){this.board=this.#r(),this.shotsReceived=[],this.clear=()=>{this.board=this.#r(),this.shotsReceived=[]}}place(r,n,e,t=!0){const o=e.length;try{this.#n(r,n,o,t);let i=0;if(1==t)for(;i<o;)this.board[r][n+i]=e,i++;else for(;i<o;)this.board[r+i][n]=e,i++}catch(r){throw new Error(r)}}receiveAttack(r,n){try{const e=this.board;return this.#e(r,n),null!=e[r][n]?(e[r][n].hit(),this.#t(r,n),"Hit"):(this.#o(r,n),"Miss")}catch(r){throw new Error(r)}}allShipsSunk(){const r=this.board;for(let n=0;n<r.length;n++)for(let e=0;e<r[n].length;e++)if(void 0!==r[n][e]&&0==r[n][e].isSunk())return!1;return!0}#r(){const r=new Array(10);for(let n=0;n<10;n++)r[n]=new Array(10);return r}#n(r,n,e,t){const o=this.board;!function(){if(r>9||n>9)throw new Error("location does not exist");if(1==t&&n+e>9)throw new Error("Ship will overflow the grid");if(0==t&&r+e>9)throw new Error("Ship will overflow the grid")}(),function(){if(1==t)for(let t=0;t<e;t++)if(null!=o[r][n+t])throw new Error("Space is occupied by another ship");if(0==t)for(let t=0;t<e;t++)if(null!=o[r+t][n])throw new Error("Space is occupied by another ship")}()}#e(r,n){const e=this.shotsReceived;for(let t=0;t<e.length;t++)if(e[t].x==r&&e[t].y==n)throw new Error("Location Shot before")}#t(r,n){const e=this.shotsReceived;e[e.length]={x:r,y:n,isHit:!0}}#o(r,n){const e=this.shotsReceived;e[e.length]={x:r,y:n,isHit:!1}}},this.ships={Destroyer:new f,Carrier:new m,PatrolBoat:new C,Battleship:new E}}fire(r,n,e){e.receiveAttack(r,n)}randomNumber(r){return Math.floor(Math.random()*r)}placeRandomly(r=0){const n=Object.values(this.ships);if(!(r>=n.length))try{const e=[!0,!1];let t=this.randomNumber(10),o=this.randomNumber(10),i=this.randomNumber(2);return this.gameBoard.place(t,o,n[r],e[i]),this.placeRandomly(r+1)}catch(n){return this.placeRandomly(r)}}}function B(r,n){for(let e=0;e<r.length;e++)for(let t=0;t<r[e].length;t++)null!=r[e][t]&&n[e][t].appendChild(document.createElement("div"))}function v(r){let n=[];for(let e=0;e<10;e++){n[e]=[];for(let t=0;t<10;t++)n[e][t]=r.getElementsByClassName(`row ${e}`)[0].getElementsByClassName(`column ${t}`)[0]}return n}const y=new b,w=y.gameBoard,x=v(document.getElementById("playerBoard")),k=(y.ships.Destroyer,y.ships.Carrier,y.ships.PatrolBoat,y.ships.Battleship,new class extends b{constructor(){super()}fire(r){let n=this.randomNumber(10),e=this.randomNumber(10);try{return r.receiveAttack(n,e),[n,e]}catch(n){this.fire(r)}}}),S=k.gameBoard,W=v(document.getElementById("computerBoard"));k.ships.Destroyer,k.ships.Carrier,k.ships.PatrolBoat,k.ships.Battleship,y.placeRandomly(),k.placeRandomly(),B(w.board,x),B(S.board,W)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,